name: anchore-grype-scanning

on: [push]

permissions: write-all

jobs:
  anchore_scan_job:
    runs-on: ubuntu-latest
    name: Anchore grype security scan
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Scan current project
      id: scan
      uses: anchore/scan-action@v2
      with:
        path: "./"
        fail-build: true
        acs-report-enable: true
    
    - name: upload Anchore scan SARIF report
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: ${{ steps.scan.outputs.sarif }}
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: build local container
      uses: docker/build-push-action@v2
      with:
        tags: devops-counsel/anchore-demo:latest
        push: false
        load: true

    - name: Scan image
      uses: anchore/scan-action@v3
      id: imagescan
      with:
        image: "devops-counsel/anchore-demo:latest"
        acs-report-enable: "true"
        fail-build: false

    - name: upload Anchore Image scan SARIF report
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: ${{ steps.imagescan.outputs.sarif }}

  push:
    needs: anchore_scan_job
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: docker login
      env:
        DOCKER_USER: ${{secrets.DOCKER_USER}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${{secrets.DOCKER_USER}}/jenkins01:$(date +%s)

    - name: Docker Push
      run: docker push ${{secrets.DOCKER_USER}}/jenkins01

  build:
    needs: push
    runs-on: ubuntu-latest
    steps:

    - name: check out source code
      uses: actions/checkout@v2

    - name: Build the Docker image
      run: docker build -t ga63qes/dockerdeployment -f Dockerfile .

    - name: Generate Deployment Package
      run: zip -r deploy.zip *

    - name: Get timestamp
      uses: gerred/actions/current-time@master
      id: current-time
        
    - name: Run string replace
      uses: frabert/replace-string-action@master
      id: format-time
      with:
        pattern: '[:\.]+'
        string: "${{ steps.current-time.outputs.time }}"
        replace-with: '-'
        flags: 'g'

    - name: Deploy to EB
      uses: einaregilsson/beanstalk-deploy@v14
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: Web-app2
        environment_name: Webapp2-env
        version_label: "Dockerdeployment-${{ steps.format-time.outputs.replaced }}"
        region: us-east-1
        deployment_package: deploy.zip
